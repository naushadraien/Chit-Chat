name: Build Expo App

on:
  push:
    branches:
      - main # or whatever your production branch is
    paths:
      - "client/**" # Only trigger on changes to client code
  workflow_dispatch: # Allow manual triggering

jobs:
  build-expo-app:
    name: Build Mobile App
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client # Set working directory to client folder
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Setup Expo and EAS
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_ACCESS_TOKEN }}

      - name: Install dependencies
        run: bun install

      - name: Configure EAS project
        run: |
          # Add owner to app.json
          if [ -f "app.json" ]; then
             if grep -q "owner" app.json; then
             echo "Owner field already exists in app.json"
             else
              # Use temp file approach for more reliability
             jq '.expo.owner = "naushadraien"' app.json > app.json.tmp && mv app.json.tmp app.json
             echo "Added owner to app.json"
             fi

              # Show the updated config
              cat app.json | grep -A 5 "expo"
           else
            echo "app.json not found, running eas init"
            echo "y" | bunx eas init --non-interactive
          fi

      - name: Configure eas.json for CI
        run: |
          cat > eas.json << EOF
          {
            "cli": {
              "version": ">= 3.13.3"
            },
            "build": {
              "preview": {
                "distribution": "internal",
                "android": {
                  "buildType": "apk",
                  "withoutCredentials": true
                }
              }
            }
          }
          EOF
          echo "Created eas.json for CI build"
          cat eas.json

      - name: Build Android app
        run: bunx eas build --platform android --profile preview --non-interactive --no-wait
      # Optional: Also build for iOS if you need it
      # - name: Build iOS app
      #   run: npx eas build --platform ios --profile preview --non-interactive --no-wait

      - name: Wait for build to complete
        run: |
          echo "Waiting for build to complete..."

          # Debug output - see what the actual command returns
          echo "Checking build list..."
          bunx eas build:list --platform=android

          # Try to get build info with correct status values
          BUILD_LIST_OUTPUT=$(bunx eas build:list --platform=android --status=new,in-progress --json || echo '[]')
          echo "Raw build list output: $BUILD_LIST_OUTPUT"

          # Check if output is valid JSON
          if ! echo "$BUILD_LIST_OUTPUT" | jq . >/dev/null 2>&1; then
          echo "Invalid JSON returned from build list command"
          echo "Waiting 30 seconds and trying again..."
          sleep 30
          BUILD_LIST_OUTPUT=$(bunx eas build:list --platform=android --status=new,in-progress --json || echo '[]')
          fi

          # Extract build ID with error handling
          BUILD_ID=$(echo "$BUILD_LIST_OUTPUT" | jq -r '.[0].id // empty')

          if [ -z "$BUILD_ID" ]; then
          echo "No in-progress build found. Checking recent builds..."
          RECENT_BUILDS=$(bunx eas build:list --platform=android --json --limit=1 || echo '[]')
          BUILD_ID=$(echo "$RECENT_BUILDS" | jq -r '.[0].id // empty')

          if [ -z "$BUILD_ID" ]; then
          echo "No builds found at all. There might be an issue with the build submission."
          exit 1
          fi
          fi

          echo "Found build ID: $BUILD_ID"

      - name: Download Android build
        if: success()
        run: bunx eas build:download --build-id ${{ env.BUILD_ID }} --output ./ChitChat.apk

      - name: Upload APK as artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: ChitChat-APK
          path: ./client/ChitChat.apk
          retention-days: 14
