name: Build Expo App

on:
  push:
    branches:
      - main # or whatever your production branch is
    paths:
      - "client/**" # Only trigger on changes to client code
  workflow_dispatch: # Allow manual triggering

jobs:
  build-expo-app:
    name: Build Mobile App
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client # Set working directory to client folder
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Setup Expo and EAS
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_ACCESS_TOKEN }}

      - name: Install dependencies
        run: bun install

      - name: Build Android app
        run: bunx eas build --platform android --profile preview --non-interactive --no-wait
      # Optional: Also build for iOS if you need it
      # - name: Build iOS app
      #   run: npx eas build --platform ios --profile preview --non-interactive --no-wait

      - name: Wait for build to complete
        run: |
          echo "Waiting for build to complete..."
          BUILD_ID=$(bunx eas build:list --json --limit=1 --platform=android --status=in-queue,in-progress | jq -r '.[0].id')

          # Wait for build to finish with timeout
          TIMEOUT=60 # minutes
          ELAPSED=0

          while [ $ELAPSED -lt $TIMEOUT ]; do
            STATUS=$(bunx eas build:list --json --id=$BUILD_ID | jq -r '.[0].status')
            echo "Build status: $STATUS"
            
            if [ "$STATUS" = "finished" ]; then
              echo "Build completed successfully!"
              break
            elif [ "$STATUS" = "errored" ]; then
              echo "Build failed"
              exit 1
            fi
            
            sleep 60
            ELAPSED=$((ELAPSED+1))
          done

          if [ $ELAPSED -ge $TIMEOUT ]; then
            echo "Build timed out after $TIMEOUT minutes"
            exit 1
          fi

          echo "BUILD_ID=$BUILD_ID" >> $GITHUB_ENV

      - name: Download Android build
        if: success()
        run: bunx eas build:download --build-id ${{ env.BUILD_ID }} --output ./ChitChat.apk

      - name: Upload APK as artifact
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: ChitChat-APK
          path: ./client/ChitChat.apk
          retention-days: 14
